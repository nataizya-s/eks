====Cluster Info====

{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "119617"
    },
    "items": [
        {
            "metadata": {
                "name": "ip-192-168-62-207.ec2.internal",
                "selfLink": "/api/v1/nodes/ip-192-168-62-207.ec2.internal",
                "uid": "bf5b6f61-06bb-11ea-b12f-02324b301c8b",
                "resourceVersion": "119597",
                "creationTimestamp": "2019-11-14T08:50:02Z",
                "labels": {
                    "alpha.eksctl.io/cluster-name": "test",
                    "alpha.eksctl.io/instance-id": "i-08e415b61b3a5175b",
                    "alpha.eksctl.io/nodegroup-name": "test-workers",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t2.medium",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "us-east-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-east-1d",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-192-168-62-207.ec2.internal",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-east-1d/i-08e415b61b3a5175b"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "2",
                    "ephemeral-storage": "20959212Ki",
                    "hugepages-2Mi": "0",
                    "memory": "4037932Ki",
                    "pods": "17"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "2",
                    "ephemeral-storage": "19316009748",
                    "hugepages-2Mi": "0",
                    "memory": "3935532Ki",
                    "pods": "17"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-11-15T06:34:44Z",
                        "lastTransitionTime": "2019-11-14T08:50:02Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-11-15T06:34:44Z",
                        "lastTransitionTime": "2019-11-14T08:50:02Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2019-11-15T06:34:44Z",
                        "lastTransitionTime": "2019-11-14T08:50:02Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2019-11-15T06:34:44Z",
                        "lastTransitionTime": "2019-11-14T08:50:22Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.62.207"
                    },
                    {
                        "type": "ExternalIP",
                        "address": "3.234.177.248"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-192-168-62-207.ec2.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-192-168-62-207.ec2.internal"
                    },
                    {
                        "type": "ExternalDNS",
                        "address": "ec2-3-234-177-248.compute-1.amazonaws.com"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "2336a6a51a7e410b83876d296558b923",
                    "systemUUID": "EC24640F-F790-96CC-CDDA-F33053134F72",
                    "bootID": "67c60dcb-a365-477d-aed8-8b9b4e4ea99c",
                    "kernelVersion": "4.14.146-119.123.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://18.6.1",
                    "kubeletVersion": "v1.14.7-eks-1861c5",
                    "kubeProxyVersion": "v1.14.7-eks-1861c5",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.5.3"
                        ],
                        "sizeBytes": 290731139
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.14.6"
                        ],
                        "sizeBytes": 82044796
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:c85954b828a5627b9f3c4540893ab9d8a4be5f8da7513882ad122e08f5c2e60a",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1"
                        ],
                        "sizeBytes": 35174083
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause-amd64@sha256:bea77c323c47f7b573355516acf927691182d1333333d1f41b7544012fab7adf",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause-amd64:3.1"
                        ],
                        "sizeBytes": 742472
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "119617"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "119617"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "119617"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "b79317b1-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "154",
                "creationTimestamp": "2019-11-14T08:42:40Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-dns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"eks.amazonaws.com/component\":\"kube-dns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.100.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.100.0.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "119617"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/aws-node",
                "uid": "b7871da2-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "968",
                "generation": 1,
                "creationTimestamp": "2019-11-14T08:42:40Z",
                "labels": {
                    "k8s-app": "aws-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"aws-node\"},\"name\":\"aws-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"aws-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"aws-node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]}]}]}}},\"containers\":[{\"env\":[{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\",\"value\":\"DEBUG\"},{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.5.3\",\"imagePullPolicy\":\"Always\",\"name\":\"aws-node\",\"ports\":[{\"containerPort\":61678,\"name\":\"metrics\"}],\"resources\":{\"requests\":{\"cpu\":\"10m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"},{\"mountPath\":\"/host/var/log\",\"name\":\"log-dir\"},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aws-node\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"log-dir\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "aws-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "aws-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "log-dir",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "dockersock",
                                "hostPath": {
                                    "path": "/var/run/docker.sock",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "aws-node",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.5.3",
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "hostPort": 61678,
                                        "containerPort": 61678,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "log-dir",
                                        "mountPath": "/host/var/log"
                                    },
                                    {
                                        "name": "dockersock",
                                        "mountPath": "/var/run/docker.sock"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "aws-node",
                        "serviceAccount": "aws-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy",
                "uid": "b79f1314-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "952",
                "generation": 1,
                "creationTimestamp": "2019-11-14T08:42:40Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-proxy",
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-proxy\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kube-proxy\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--v=2\",\"--config=/var/lib/kube-proxy-config/config\"],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.14.6\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":false},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/var/lib/kube-proxy/\",\"name\":\"kubeconfig\"},{\"mountPath\":\"/var/lib/kube-proxy-config/\",\"name\":\"config\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"configMap\":{\"name\":\"kube-proxy\"},\"name\":\"kubeconfig\"},{\"configMap\":{\"name\":\"kube-proxy-config\"},\"name\":\"config\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "varlog",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "kube-proxy-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.14.6",
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "varlog",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "mountPath": "/var/lib/kube-proxy/"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/var/lib/kube-proxy-config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%"
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "119617"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
                "uid": "b790d581-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "1030",
                "generation": 1,
                "creationTimestamp": "2019-11-14T08:42:40Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-11-14T08:50:33Z",
                        "lastTransitionTime": "2019-11-14T08:50:33Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2019-11-14T08:50:36Z",
                        "lastTransitionTime": "2019-11-14T08:42:47Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-8455f84f99\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "119617"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-8455f84f99",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-8455f84f99",
                "uid": "bc263b77-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "1028",
                "generation": 1,
                "creationTimestamp": "2019-11-14T08:42:47Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "8455f84f99"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "b790d581-06ba-11ea-b12f-02324b301c8b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "8455f84f99"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "8455f84f99"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "119620"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node-7c8tc",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-7c8tc",
                "uid": "bf5da698-06bb-11ea-b12f-02324b301c8b",
                "resourceVersion": "967",
                "creationTimestamp": "2019-11-14T08:50:02Z",
                "labels": {
                    "controller-revision-hash": "7bbf7b5f4",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "b7871da2-06ba-11ea-b12f-02324b301c8b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockersock",
                        "hostPath": {
                            "path": "/var/run/docker.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "aws-node-token-ztcjj",
                        "secret": {
                            "secretName": "aws-node-token-ztcjj",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log"
                            },
                            {
                                "name": "dockersock",
                                "mountPath": "/var/run/docker.sock"
                            },
                            {
                                "name": "aws-node-token-ztcjj",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-192-168-62-207.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-62-207.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:02Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:02Z"
                    }
                ],
                "hostIP": "192.168.62.207",
                "podIP": "192.168.62.207",
                "startTime": "2019-11-14T08:50:02Z",
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2019-11-14T08:50:13Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.5.3",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:c071dfc45cd957fc6ab2db769ae6374b1f59a08db90b0ff0b9166b8531497a35",
                        "containerID": "docker://7027a6cd5cb8a9246c90c8f2b195d5a059b8f9e754bde30f6c1d4f83ea09acf6"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-8455f84f99-g5d2m",
                "generateName": "coredns-8455f84f99-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-8455f84f99-g5d2m",
                "uid": "bc2a182a-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "1018",
                "creationTimestamp": "2019-11-14T08:42:47Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "8455f84f99"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-8455f84f99",
                        "uid": "bc263b77-06ba-11ea-b12f-02324b301c8b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-2tvzp",
                        "secret": {
                            "secretName": "coredns-token-2tvzp",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "coredns-token-2tvzp",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-192-168-62-207.ec2.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:23Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:23Z"
                    }
                ],
                "hostIP": "192.168.62.207",
                "podIP": "192.168.33.59",
                "startTime": "2019-11-14T08:50:23Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2019-11-14T08:50:25Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:c85954b828a5627b9f3c4540893ab9d8a4be5f8da7513882ad122e08f5c2e60a",
                        "containerID": "docker://94e99bd431640f3b8ed89141c22aac0ba42be0eb0b18f09d971ab99e852f2805"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-8455f84f99-rqpfr",
                "generateName": "coredns-8455f84f99-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-8455f84f99-rqpfr",
                "uid": "bc2b7159-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "1027",
                "creationTimestamp": "2019-11-14T08:42:47Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "8455f84f99"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-8455f84f99",
                        "uid": "bc263b77-06ba-11ea-b12f-02324b301c8b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-2tvzp",
                        "secret": {
                            "secretName": "coredns-token-2tvzp",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "coredns-token-2tvzp",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-192-168-62-207.ec2.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:23Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:36Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:36Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:23Z"
                    }
                ],
                "hostIP": "192.168.62.207",
                "podIP": "192.168.33.167",
                "startTime": "2019-11-14T08:50:23Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2019-11-14T08:50:25Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.3.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:c85954b828a5627b9f3c4540893ab9d8a4be5f8da7513882ad122e08f5c2e60a",
                        "containerID": "docker://a18a80555aebca6e5a177283858dd5580fa8cb90e6a1328bddbdd9e39b1a1d4b"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-f2nxw",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-f2nxw",
                "uid": "bf5dcb3d-06bb-11ea-b12f-02324b301c8b",
                "resourceVersion": "951",
                "creationTimestamp": "2019-11-14T08:50:02Z",
                "labels": {
                    "controller-revision-hash": "5964c94574",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "b79f1314-06ba-11ea-b12f-02324b301c8b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-qs4d4",
                        "secret": {
                            "secretName": "kube-proxy-token-qs4d4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-qs4d4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-192-168-62-207.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-62-207.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:02Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:09Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:09Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-11-14T08:50:02Z"
                    }
                ],
                "hostIP": "192.168.62.207",
                "podIP": "192.168.62.207",
                "startTime": "2019-11-14T08:50:02Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2019-11-14T08:50:09Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.14.6",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:d3a6122f63202665aa50f3c08644ef504dbe56c76a1e0ab05f8e296328f3a6b4",
                        "containerID": "docker://53e90edaf0926f86e87aee310e9b62dbe919641293b62958c6c335b2808672eb"
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container aws-node of pod kube-system/aws-node-7c8tc ====
====== Installing AWS-CNI ======
====== Starting amazon-k8s-agent ======
ERROR: logging before flag.Parse: W1114 09:17:16.734857       9 reflector.go:341] pkg/mod/k8s.io/client-go@v0.0.0-20180806134042-1f13a808da65/tools/cache/reflector.go:99: watch of *v1.Pod ended with: too old resource version: 1027 (3453)
ERROR: logging before flag.Parse: W1114 12:36:57.066741       9 reflector.go:341] pkg/mod/k8s.io/client-go@v0.0.0-20180806134042-1f13a808da65/tools/cache/reflector.go:99: watch of *v1.Pod ended with: too old resource version: 3453 (21608)
==== END logs for container aws-node of pod kube-system/aws-node-7c8tc ====
==== START logs for container coredns of pod kube-system/coredns-8455f84f99-g5d2m ====
.:53
2019-11-14T08:50:25.924Z [INFO] CoreDNS-1.3.1
2019-11-14T08:50:25.924Z [INFO] linux/amd64, go1.10.8, 6b56a9c9
CoreDNS-1.3.1
linux/amd64, go1.10.8, 6b56a9c9
2019-11-14T08:50:25.924Z [INFO] plugin/reload: Running configuration MD5 = 86a350d0c3832da65c10531b445c45d5
==== END logs for container coredns of pod kube-system/coredns-8455f84f99-g5d2m ====
==== START logs for container coredns of pod kube-system/coredns-8455f84f99-rqpfr ====
.:53
2019-11-14T08:50:25.975Z [INFO] CoreDNS-1.3.1
2019-11-14T08:50:25.975Z [INFO] linux/amd64, go1.10.8, 6b56a9c9
CoreDNS-1.3.1
linux/amd64, go1.10.8, 6b56a9c9
2019-11-14T08:50:25.975Z [INFO] plugin/reload: Running configuration MD5 = 86a350d0c3832da65c10531b445c45d5
==== END logs for container coredns of pod kube-system/coredns-8455f84f99-rqpfr ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-f2nxw ====
I1114 08:50:09.148300       1 flags.go:33] FLAG: --alsologtostderr="false"
I1114 08:50:09.148365       1 flags.go:33] FLAG: --bind-address="0.0.0.0"
I1114 08:50:09.148374       1 flags.go:33] FLAG: --cleanup="false"
I1114 08:50:09.148381       1 flags.go:33] FLAG: --cleanup-iptables="false"
I1114 08:50:09.148389       1 flags.go:33] FLAG: --cleanup-ipvs="true"
I1114 08:50:09.148394       1 flags.go:33] FLAG: --cluster-cidr=""
I1114 08:50:09.148400       1 flags.go:33] FLAG: --config="/var/lib/kube-proxy-config/config"
I1114 08:50:09.148410       1 flags.go:33] FLAG: --config-sync-period="15m0s"
I1114 08:50:09.148418       1 flags.go:33] FLAG: --conntrack-max="0"
I1114 08:50:09.148427       1 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I1114 08:50:09.148433       1 flags.go:33] FLAG: --conntrack-min="131072"
I1114 08:50:09.148439       1 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1114 08:50:09.148453       1 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1114 08:50:09.148459       1 flags.go:33] FLAG: --feature-gates=""
I1114 08:50:09.148466       1 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1114 08:50:09.148472       1 flags.go:33] FLAG: --healthz-port="10256"
I1114 08:50:09.148477       1 flags.go:33] FLAG: --help="false"
I1114 08:50:09.148482       1 flags.go:33] FLAG: --hostname-override=""
I1114 08:50:09.148493       1 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I1114 08:50:09.148498       1 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I1114 08:50:09.148503       1 flags.go:33] FLAG: --iptables-sync-period="30s"
I1114 08:50:09.148508       1 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I1114 08:50:09.148517       1 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I1114 08:50:09.148523       1 flags.go:33] FLAG: --ipvs-scheduler=""
I1114 08:50:09.148531       1 flags.go:33] FLAG: --ipvs-strict-arp="false"
I1114 08:50:09.148536       1 flags.go:33] FLAG: --ipvs-sync-period="30s"
I1114 08:50:09.148541       1 flags.go:33] FLAG: --kube-api-burst="10"
I1114 08:50:09.148590       1 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1114 08:50:09.148597       1 flags.go:33] FLAG: --kube-api-qps="5"
I1114 08:50:09.148608       1 flags.go:33] FLAG: --kubeconfig=""
I1114 08:50:09.148613       1 flags.go:33] FLAG: --log-backtrace-at=":0"
I1114 08:50:09.148621       1 flags.go:33] FLAG: --log-dir=""
I1114 08:50:09.148626       1 flags.go:33] FLAG: --log-file=""
I1114 08:50:09.148631       1 flags.go:33] FLAG: --log-flush-frequency="5s"
I1114 08:50:09.148640       1 flags.go:33] FLAG: --logtostderr="true"
I1114 08:50:09.148645       1 flags.go:33] FLAG: --masquerade-all="false"
I1114 08:50:09.148650       1 flags.go:33] FLAG: --master=""
I1114 08:50:09.148655       1 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I1114 08:50:09.148661       1 flags.go:33] FLAG: --metrics-port="10249"
I1114 08:50:09.148666       1 flags.go:33] FLAG: --nodeport-addresses="[]"
I1114 08:50:09.148679       1 flags.go:33] FLAG: --oom-score-adj="-999"
I1114 08:50:09.148684       1 flags.go:33] FLAG: --profiling="false"
I1114 08:50:09.148689       1 flags.go:33] FLAG: --proxy-mode=""
I1114 08:50:09.148695       1 flags.go:33] FLAG: --proxy-port-range=""
I1114 08:50:09.148702       1 flags.go:33] FLAG: --resource-container="/kube-proxy"
I1114 08:50:09.148707       1 flags.go:33] FLAG: --skip-headers="false"
I1114 08:50:09.148716       1 flags.go:33] FLAG: --stderrthreshold="2"
I1114 08:50:09.148721       1 flags.go:33] FLAG: --udp-timeout="250ms"
I1114 08:50:09.148726       1 flags.go:33] FLAG: --v="2"
I1114 08:50:09.148731       1 flags.go:33] FLAG: --version="false"
I1114 08:50:09.148743       1 flags.go:33] FLAG: --vmodule=""
I1114 08:50:09.148752       1 flags.go:33] FLAG: --write-config-to=""
I1114 08:50:09.150547       1 feature_gate.go:226] feature gates: &{map[]}
I1114 08:50:09.415145       1 server_others.go:146] Using iptables Proxier.
W1114 08:50:09.415262       1 proxier.go:319] clusterCIDR not specified, unable to distinguish between internal and external traffic
I1114 08:50:09.415414       1 iptables.go:200] Could not connect to D-Bus system bus: dial unix /var/run/dbus/system_bus_socket: connect: no such file or directory
I1114 08:50:09.415481       1 server.go:562] Version: v1.14.6
I1114 08:50:09.424542       1 server.go:578] Running in resource-only container "/kube-proxy"
I1114 08:50:09.427202       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I1114 08:50:09.427237       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I1114 08:50:09.427338       1 mount_linux.go:156] Detected OS without systemd
I1114 08:50:09.427533       1 conntrack.go:83] Setting conntrack hashsize to 32768
I1114 08:50:09.442252       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I1114 08:50:09.442306       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I1114 08:50:09.442422       1 config.go:202] Starting service config controller
I1114 08:50:09.442443       1 controller_utils.go:1027] Waiting for caches to sync for service config controller
I1114 08:50:09.442464       1 config.go:102] Starting endpoints config controller
I1114 08:50:09.442474       1 controller_utils.go:1027] Waiting for caches to sync for endpoints config controller
I1114 08:50:09.542665       1 controller_utils.go:1034] Caches are synced for service config controller
I1114 08:50:09.542807       1 proxier.go:661] Not syncing iptables until Services and Endpoints have been received from master
I1114 08:50:09.542847       1 controller_utils.go:1034] Caches are synced for endpoints config controller
I1114 08:50:09.542915       1 service.go:332] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I1114 08:50:09.542939       1 service.go:332] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I1114 08:50:09.542951       1 service.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I1114 08:50:33.601736       1 proxier.go:675] Stale udp service kube-system/kube-dns:dns -> 10.100.0.10
==== END logs for container kube-proxy of pod kube-system/kube-proxy-f2nxw ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/events",
        "resourceVersion": "119622"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/replicationcontrollers",
        "resourceVersion": "119623"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/services",
        "resourceVersion": "119623"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "b7a12f4f-06ba-11ea-b12f-02324b301c8b",
                "resourceVersion": "172",
                "creationTimestamp": "2019-11-14T08:42:40Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.100.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets",
        "resourceVersion": "119623"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/deployments",
        "resourceVersion": "119625"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/replicasets",
        "resourceVersion": "119625"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/pods",
        "resourceVersion": "119625"
    },
    "items": []
}
Cluster info dumped to standard output >& /dev/null

